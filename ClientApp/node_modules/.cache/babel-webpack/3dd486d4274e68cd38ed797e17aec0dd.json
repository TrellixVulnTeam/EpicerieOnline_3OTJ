{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./../services/token.service\";\nimport * as i3 from \"./../services/customer.service\";\nexport let LoggerService = /*#__PURE__*/(() => {\n  class LoggerService {\n    constructor(router, token, customerService) {\n      this.router = router;\n      this.token = token;\n      this.customerService = customerService;\n      this.loggedUser = {\n        id: 0,\n        roleId: 1,\n        email: '',\n        logged: false,\n        token: '',\n        invalideLoginOrPassword: false,\n        emailAlreadyExists: false\n      };\n      this.isLogged$ = new EventEmitter();\n    } //Registere user\n\n\n    registerUser(customer) {\n      this.customerService.create(customer).subscribe(res => {////Redirect to home page after registration\n        //this.router.navigate(['/'])\n        //  .then(() => {\n        //    window.location.reload();\n        //  })\n      }, err => {\n        if (err.status == 409) {\n          this.loggedUser.emailAlreadyExists = true;\n          this.isLogged$.emit(this.loggedUser);\n        }\n      });\n    } //Login user\n\n\n    loginUser(customer) {\n      this.customerService.login(customer).subscribe(res => {\n        //Parse JSON object from response\n        let resJSON = JSON.parse(res); //Save token in session storage\n\n        console.log(\"resJSON\", resJSON);\n        this.token.saveToken(resJSON.Token); //Update user data\n\n        this.loggedUser.id = resJSON.UserId;\n        this.loggedUser.roleId = resJSON.UserRoleId;\n        this.loggedUser.email = resJSON.UserEmail;\n        this.loggedUser.logged = true;\n        this.isLogged$.emit(this.loggedUser);\n        sessionStorage.setItem(\"log\", JSON.stringify(this.loggedUser));\n        console.log(\"after login\", this.loggedUser);\n      }, err => {\n        //400 wrong email or password\n        if (err.status == 400) {\n          this.loggedUser.invalideLoginOrPassword = true;\n          this.isLogged$.emit(this.loggedUser);\n        }\n      });\n    } //Check if admin is logged\n\n\n    isAdmin() {\n      let log = sessionStorage.getItem('log');\n\n      if (log) {\n        let login = JSON.parse(log);\n        if (login.roleId === 2) return true;\n      }\n\n      return false;\n    } //Check if user is logged\n\n\n    isLogged() {\n      if (this.token.isToken()) {\n        this.loggedUser.logged = true;\n        this.isLogged$.emit(this.loggedUser);\n        return true;\n      } else {\n        this.loggedUser.logged = false;\n        this.isLogged$.emit(this.loggedUser);\n        return false;\n      }\n    } //Logout user\n\n\n    logoutUser() {\n      //Delete token\n      this.token.deleteToken(); //Delete user from session storage\n\n      sessionStorage.removeItem('log'); //User is logout\n\n      this.loggedUser.logged = false;\n      this.isLogged$.emit(this.loggedUser);\n    } //Get user data from session storage\n\n\n    getUserFromSessionStorage() {\n      let user = sessionStorage.getItem('log');\n      if (user) return user;\n      return '';\n    }\n\n  }\n\n  LoggerService.ɵfac = function LoggerService_Factory(t) {\n    return new (t || LoggerService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.TokenService), i0.ɵɵinject(i3.CustomerService));\n  };\n\n  LoggerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoggerService,\n    factory: LoggerService.ɵfac,\n    providedIn: 'root'\n  });\n  return LoggerService;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport let PanierService = /*#__PURE__*/(() => {\n  class PanierService {\n    constructor() {\n      this.$panier = new EventEmitter();\n      this.panierInfo = {\n        products: [],\n        totalPrice: 0,\n        nbProducts: 0\n      };\n      this.products = [];\n    }\n\n    addProductLocalStorage(p, quantity) {\n      let local = localStorage.getItem('panier');\n      let localPanierInfo = {\n        products: [],\n        nbProducts: 0,\n        totalPrice: 0\n      };\n      let localProducts = [];\n\n      if (local) {\n        localPanierInfo = JSON.parse(local);\n        localProducts = localPanierInfo.products;\n        let localProductToWork = localProducts.find(x => x.title == p.title);\n\n        if (localProductToWork) {\n          for (let i = 0; i < localProducts.length; i++) {\n            if (localProducts[i].title === p.title) {\n              if (quantity < 0 && localProducts[i].quantity == 1) {\n                this.deleteProductLocalStorage(localProducts[i].id, localProducts[i].price);\n                return;\n              }\n\n              localProducts[i].quantity += quantity;\n            }\n          }\n\n          localPanierInfo.products = localProducts;\n          localPanierInfo.nbProducts += quantity;\n          localPanierInfo.totalPrice += p.price * quantity;\n          localStorage.setItem('panier', JSON.stringify(localPanierInfo));\n          this.$panier.emit(localPanierInfo);\n        } else {\n          p.quantity = quantity;\n          localProducts.push(p);\n          localPanierInfo.products = localProducts;\n          localPanierInfo.nbProducts += quantity;\n          localPanierInfo.totalPrice += p.price * quantity;\n          localStorage.setItem('panier', JSON.stringify(localPanierInfo));\n          this.$panier.emit(localPanierInfo);\n        }\n      } else {\n        console.log(\"create local storage\", this.products);\n        p.quantity = quantity;\n        localProducts.push(p);\n        localPanierInfo.products = localProducts;\n        localPanierInfo.nbProducts = quantity;\n        localPanierInfo.totalPrice = p.price * quantity;\n        localStorage.setItem('panier', JSON.stringify(localPanierInfo));\n        this.$panier.emit(localPanierInfo);\n      }\n    }\n\n    getProductsLocalStorage() {\n      if (localStorage.getItem(\"panier\") !== null) {\n        let panierJSON = JSON.parse(localStorage.getItem('panier'));\n        this.panierInfo = panierJSON;\n        return this.panierInfo;\n      }\n\n      return {\n        products: [],\n        totalPrice: 0,\n        nbProducts: 0\n      };\n    }\n\n    deleteProductLocalStorage(id, price, deleteAll = true) {\n      console.log(\"id, price\", id + \"   \" + price);\n      let localPanierInfo = {\n        products: [],\n        nbProducts: 0,\n        totalPrice: 0\n      };\n      let localProducts = [];\n      localPanierInfo = JSON.parse(localStorage.getItem('panier'));\n      localProducts = localPanierInfo.products;\n      let numberToDelete = localProducts.find(p => p.id == id).quantity;\n\n      if (localPanierInfo.nbProducts > 0) {\n        localPanierInfo.nbProducts -= numberToDelete;\n        localPanierInfo.totalPrice -= price * numberToDelete;\n      } else {\n        localPanierInfo.totalPrice = 0;\n        localPanierInfo.nbProducts = 0;\n      }\n\n      let index = localProducts.map(x => {\n        return x.id;\n      }).indexOf(id);\n      localProducts.splice(index, 1);\n      localPanierInfo.products = localProducts;\n      localStorage.setItem('panier', JSON.stringify(localPanierInfo));\n      this.$panier.emit(localPanierInfo);\n    }\n\n  }\n\n  PanierService.ɵfac = function PanierService_Factory(t) {\n    return new (t || PanierService)();\n  };\n\n  PanierService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PanierService,\n    factory: PanierService.ɵfac,\n    providedIn: 'root'\n  });\n  return PanierService;\n})();","map":null,"metadata":{},"sourceType":"module"}